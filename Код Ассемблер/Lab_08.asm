.model small            ;Модель памяти Small
.286                    ;16 разрядный проц
.stack 100h             ;Директива .STACK описывает сегмент стека
.data                   ;Идентификатор сегмента данных
    a dw 65535              ;Переменная которую надо вывести на экран в виде строки
    b db '     ',10,13,'$'  ;Переменная в которую мы запишем переменную a в виде строки
    c dw 10                 ;Делитель 10
.code                   ;Идентификатор сегмента кода

start:                  ;Метка начала блока start
    mov ax, @data        ;Передаем @data в ax
    mov ds, ax           ;Передаем ax в ds
    
    mov si, 4            ;Записываем 4 в si
    mov ax, a           ;Записываем a в ax
    
k1:                     ;Метка начала блока k1
    xor dx, dx          ;Обнуление регистра dx (быстрее чем mov dx, 0)
    div c               ;Делим содержимое ax на c
    add dl, '0'         ;Прибовляем к младшему байту dx '0' (Преобразовали число к символу)
                        ;'0' = 48 (48-57 это номера символов от 0-9 в таблице ascii)
    mov [b + si], dl    ;Записываем в строку полученный символ
    dec si              ;Отнимаем 1 от регистра si
    
    cmp ax, 0           ;Сравниваем ax с 0
    jne k1              ;Если ax не 0, то выполняем (k1) деление до тех пор пока число не кончится
    
    mov dx, offset b    ;В dx записываем значение переменной b
    mov ah, 9h          ;в ah передаем код -9h (Вывод на экран)
    int 21h             ;Вызываем прерывание для выполнения команды
    
    mov ah, 4ch         ;Передаем код завершения программы
    int 21h             ;Вызываем прерывание для выполнения команды
end start               ;Окончания блока start
