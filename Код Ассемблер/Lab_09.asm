.model small            ;Модель памяти Small
.286                    ;16 разрядный проц
.data                   ;Идентификатор сегмента данных
    Message db 'This is the program launch path:',10,13,'$'
.code                   ;Идентификатор сегмента кода

start:                  ;Метка начала блока start
    mov ax,[ds:2ch]         ;Записываем в регистр ax адрес сегмента PSP
    mov cx,ax               ;Передаем ax в cx
    mov ax, @data           ;Передаем @data в ax
    mov ds, ax              ;Передаем ax в ds
    
    mov dx, offset Message  ;В dx записываем значение переменной Message
    mov ah,9h               ;в ah передаем код -9h (Вывод на экран)
    int 21h                 ;Вызываем прерывание для выполнения команды
    
    mov ds,cx               ;Передаем ds в ds
    
    mov si,0                ;Записываем 0 в регистр si
k1: 
    mov dl,[ds:si]
    inc si
    cmp dl,0
    jne k1                  
        ;Перебираем символы строки до тех пор пока не встретим 0
    mov dl,[ds:si]
    inc si
    cmp dl,0                ;Вторая проверка следующего символа на 0
    jne k1                  ;Если не два 0 за подряд, то переходим к метке k1
    add si,2                ;Пропускаем 2 байта для того чтобы дойти до начала пути адреса программы
k3: 
    mov dl,[ds:si]
    cmp dl,0
    je k2                   ;Если встретили 0, то переходим к завершению программы
    mov ah,2h               ;в ah передаем код -2h (Вывод на экран 1 символа)
    int 21h                 ;Вызываем прерывание для выполнения команды
    inc si                  ;Увеличиваем счетчик
    jmp k3                  ;Переходик на k3 для продолжения вывода следующих символов
k2: 
    mov ah, 4ch         ;Передаем код завершения программы
    int 21h             ;Вызываем прерывание для выполнения команды
end start               ;Окончания блока start
